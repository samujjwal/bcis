#summary Syntax of statements
#labels Phase-Design

= Statements =

Statements are separated by *either* line breaks or semicolons.

In these examples, capitalized words are place-holders.

== Assignment ==
{{{
set VAR = EXPRESSION
}}}

Evaluate EXPRESSION and assign it to a local variable named VAR.  Note that the "=" here is not an operator, it's part of the statement syntax.

If VAR is currently undefined, a new local variable is created.


== print ==
{{{
print EXPRESSION
}}}

Evaluate EXPRESSION and print the result, followed by a newline, to the output stream.


== if/then/else ==

{{{
if expression then
    ... statements ...
elsif expression then
    ... statements ...
elsif expression then
    ... statements ...
...more elsif blocks...
else
    ... statements ...
done
}}}

== For Loops ==

{{{
for VAR from START to END step STEP_VAL do
    ... statements ...
done
}}}

Evaluate statements with the variable named VAR bound to successive values, from START up to (and including) END, adding STEP_VAL each time.  START, END, and STEP_VAL are all expressions.

== While Loops ==

{{{
while expression do
    ... statements ...
done
}}}

== Generic Loops ==

Put a loop inside "loop...done".  Use `break` anywhere in the loop to stop, `restart` to start over at the top of the loop.

{{{
loop
    ... statements ...
    restart
    ... statements ...
    break
    ... statements ...
done
}}}